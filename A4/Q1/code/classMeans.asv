function [ c ] = classMeans( u,y,w,b,mask )
%classMeans Finds the optimal value of class means within every iteration

convBias = conv2(b, w); % Since summation over wij performs convolution with the neighborhood mask
convBiasSquare = conv2(b.^2, w);
imgSize = size(y);
innerSumNum = conv2(b,w);
innerSumDenom = conv2(b.^2,w);
num=0;
denom=0;
for k = 1:K
    for i = 1:imgSize(1)
        for j = 1:imgSize(2)
            if (mask(i,j) > 0)
                numerator = numerator + convBias(i,j)*(u(i,j,k)^q)*imageData(i,j);
                denominator = denominator + convBiasSquare(i,j)*(u(i,j,k)^q);
            end
        end
    end
    c(k) = numerator/denominator;
    waitbar(k/K);
end
close(h);


end

